#pragma once

#include <ctl/task_counter.h>
#include <ctl/task_handle.h>

// -----------------------------------------------------------------------------

namespace ctl
{
    namespace impl
    {

        // -----------------------------------------------------------------------------

        class sleeping_task
        {
        public:

            sleeping_task()
                : m_task()
            {
            }

            // -----------------------------------------------------------------------------

            sleeping_task(task taskHandle)
                : m_task(std::move(taskHandle))
            {
            }

            // -----------------------------------------------------------------------------

            task& get_task()
            {
                return m_task;
            }

            // -----------------------------------------------------------------------------


            const_task_counter_ptr get_counter()
            {
                return m_task.get_waiting_counter();
            }

            // -----------------------------------------------------------------------------

        private:

            task m_task;
        };
    }
}

// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------

